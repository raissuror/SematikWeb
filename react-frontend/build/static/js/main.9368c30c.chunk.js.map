{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","musics","input","value","setValue","getDataSong","a","headers","queryData","query","axios","method","data","qs","stringify","console","log","formatted_data","results","bindings","map","index","formatter","error","getDataSorting","song","artist","genre","length","year","listeners","className","style","backgroundImage","onChange","event","target","type","placeholder","required","onClick","item","i","key","displayType","thousandSeparator","src","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"2kBA2UeA,MA3Tf,WAAgB,IAAD,EAEaC,mBAAS,CACjCC,OAAQ,GACRC,MAAO,KAJI,mBAENC,EAFM,KAECC,EAFD,KAOPC,EAAW,uCAAG,oCAAAC,EAAA,4DACD,+DAIXC,EAAU,CACd,OAAU,4CACV,eAAgB,oDAGZC,EAAY,CAChBC,MAAM,4ZAAD,OAYwBN,EAAMD,MAZ9B,sCAYiEC,EAAMD,MAZvE,qCAYyGC,EAAMD,MAZ/G,uBAXW,kBA4BOQ,IA3BR,+DA2BwB,CACrCC,OAAQ,OACRJ,UACAK,KAAMC,IAAGC,UAAUN,KA/BL,gBA4BRI,EA5BQ,EA4BRA,KAKRG,QAAQC,IAAIJ,GAGNK,EAAiBL,EAAKM,QAAQC,SAASC,KAAI,SAACnB,EAAQoB,GAAT,OAAmBC,EAAUrB,EAAQoB,MACtFN,QAAQC,IAAIC,GAEZb,EAAS,2BACJD,GADG,IAENF,OAAQgB,KAzCM,kDA4ChBF,QAAQQ,MAAR,MA5CgB,0DAAH,qDAgDXC,EAAc,uCAAG,oCAAAlB,EAAA,4DACJ,+DAIXC,EAAU,CACd,OAAU,4CACV,eAAgB,oDAGZC,EAAY,CAChBC,MAAM,obAXa,kBA6BIC,IA5BR,+DA4BwB,CACrCC,OAAQ,OACRJ,UACAK,KAAMC,IAAGC,UAAUN,KAhCF,gBA6BXI,EA7BW,EA6BXA,KAKRG,QAAQC,IAAIJ,GAGNK,EAAiBL,EAAKM,QAAQC,SAASC,KAAI,SAACnB,EAAQoB,GAAT,OAAmBC,EAAUrB,EAAQoB,MACtFN,QAAQC,IAAIC,GAEZb,EAAS,2BACJD,GADG,IAENF,OAAQgB,KA1CS,kDA6CnBF,QAAQQ,MAAR,MA7CmB,0DAAH,qDAiDdD,EAAY,SAACrB,EAAQoB,GAEzB,MAAO,CACL,EAAKA,EACL,KAAQpB,EAAOwB,KAAKtB,MACpB,OAAUF,EAAOyB,OAAOvB,MACxB,MAASF,EAAO0B,MAAMxB,MACtB,OAAUF,EAAO2B,OAAOzB,MACxB,KAAQF,EAAO4B,KAAK1B,MACpB,UAAaF,EAAO6B,UAAU3B,QAWlC,OACE,yBAAK4B,UAAU,mBAEX,4BAAQA,UAAU,UAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,4EAEb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,yDACb,0BAAMA,UAAU,qEAAoE,+BAAQ,+BAAQ,+BAAQ,+BAAQ,gCACpH,0BAAMA,UAAU,aAAhB,qBASd,yBAAKA,UAAU,QAEb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,sCAEb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,mBAAmBC,MAAO,CAACC,gBAAiB,2BAC3D,yBAAKF,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,iCACb,qCAAU,2CAGd,yBAAKA,UAAU,wBACb,0BAAMA,UAAU,cACd,yBAAKA,UAAU,qGACb,yBAAKA,UAAU,+EACf,2BAAOG,SAjDhB,SAAAC,GACnB/B,EAAS,2BACJD,GADG,IAEN,MAASgC,EAAMC,OAAOjC,UA8CmCkC,KAAK,OAAON,UAAU,mBAAmBO,YAAY,iCAAiCC,SAAS,cAE9H,4BAAQR,UAAU,2BAA2BS,QAASnC,GAAa,qDAe3F,yBAAK0B,UAAU,UACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,wBAEb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,uEACb,yBAAKA,UAAU,mBAAmBC,MAAO,CAACC,gBAAiB,6BAC3D,yBAAKF,UAAU,gBACf,yBAAKA,UAAU,cAAf,gBACA,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,cAAf,QACA,yBAAKA,UAAU,eAAf,aACA,yBAAKA,UAAU,kBAAf,gBAKN,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBACb,wCACA,4BAAQA,UAAU,2BAA2BS,QAAShB,GAAgB,iDAExE,yBAAKO,UAAU,yBACb,4BACG5B,EAAMF,OAAOmB,KAAI,SAACqB,EAAMC,GAAP,OAClB,wBAAIC,IAAKD,GACP,yBAAKX,UAAU,4DACf,yBAAKA,UAAU,eACf,yBAAKA,UAAU,eAAeU,EAAKhB,KAAK,8BACxC,yBAAKM,UAAU,gBAAgBU,EAAKf,OAAO,8BAJ7C,WAKWe,EAAKd,MAAM,6BALtB,cAMcc,EAAKb,OAAO,6BAN1B,eAOea,EAAKZ,KAAK,6BAPzB,YAQW,kBAAC,IAAD,CAAc1B,MAAOsC,EAAKX,UAAWc,YAAa,OAAQC,mBAAmB,SAE1F,wBAAId,UAAU,sBAU1B,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iBACb,8CAIN,yBAAKA,UAAU,gBAEb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,mBAAkB,yBAAKe,IAAI,oBAAoBC,IAAI,MAClE,yBAAKhB,UAAU,qBACb,yBAAKA,UAAU,mBAAkB,qDACjC,yBAAKA,UAAU,kBACb,0MAMR,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,qFACb,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,mBAAkB,sDACjC,yBAAKA,UAAU,kBACb,6OAGJ,yBAAKA,UAAU,sCAAqC,yBAAKe,IAAI,oBAAoBC,IAAI,QAIzF,yBAAKhB,UAAU,qBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,mBAAkB,yBAAKe,IAAI,oBAAoBC,IAAI,MAClE,yBAAKhB,UAAU,qBACb,yBAAKA,UAAU,mBAAkB,+CACjC,yBAAKA,UAAU,kBACb,uUASd,4BAAQA,UAAU,UAChB,yBAAKA,UAAU,mBAAmBC,MAAO,CAACC,gBAAiB,4BAC3D,yBAAKF,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBAEb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,yDACb,0BAAMA,UAAU,qEAAoE,+BAAQ,+BAAQ,+BAAQ,+BAAQ,gCACpH,0BAAMA,UAAU,aAAhB,oBAQZ,yBAAKA,UAAU,cACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBAAf,iFCjTEiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAzC,GACLR,QAAQQ,MAAMA,EAAM0C,c","file":"static/js/main.9368c30c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport NumberFormat from 'react-number-format';\r\nimport './App.css';\r\nimport './styles/artist_responsive.css';\r\nimport './styles/artist.css';\r\nimport './styles/blog_responsive.css';\r\nimport './styles/blog.css';\r\nimport './styles/contact_responsive.css';\r\nimport './styles/contact.css';\r\nimport './styles/elements_responsive.css';\r\nimport './styles/elements.css';\r\nimport './styles/main_styles.css';\r\nimport './styles/responsive.css';\r\n\r\nfunction App() {\r\n\r\n  const [value, setValue] = useState({\r\n    musics: [],\r\n    input: ''\r\n  });\r\n\r\n  const getDataSong = async () => {\r\n    const BASE_URL = \"https://qrary-fuseki-service.herokuapp.com/trend_music/query\";\r\n    // API server : https://qrary-fuseki-service.herokuapp.com/trend_music/query\r\n    // API local : http://localhost:3030/trend_music/query\r\n\r\n    const headers = {\r\n      'Accept': 'application/sparql-results+json,*/*;q=0.9',\r\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n    };\r\n\r\n    const queryData = {\r\n      query:\r\n        `PREFIX md: <http://trendmusic.com/musicdata#>\r\n  \r\n        SELECT ?song ?artist ?genre ?length ?year ?listeners\r\n        WHERE\r\n        {\r\n          ?m     md:song    ?song ;\r\n                md:artist    ?artist ;\r\n                md:genre    ?genre ;\r\n                md:length    ?length ;\r\n                md:year    ?year ;\r\n                md:listeners    ?listeners ;\r\n          FILTER (regex(?song, \"^${value.input}\",\"i\") || regex(?artist, \"^${value.input}\",\"i\") || regex(?genre, \"^${value.input}\",\"i\"))\r\n        }`\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios(BASE_URL, {\r\n        method: 'POST',\r\n        headers,\r\n        data: qs.stringify(queryData)\r\n      });\r\n      console.log(data);\r\n\r\n      // Convert Data\r\n      const formatted_data = data.results.bindings.map((musics, index) => formatter(musics, index));\r\n      console.log(formatted_data)\r\n\r\n      setValue({\r\n        ...value,\r\n        musics: formatted_data\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  const getDataSorting = async () => {\r\n    const BASE_URL = \"https://qrary-fuseki-service.herokuapp.com/trend_music/query\";\r\n    // API server : https://qrary-fuseki-service.herokuapp.com/trend_music/query\r\n    // API local : http://localhost:3030/trend_music/query\r\n\r\n    const headers = {\r\n      'Accept': 'application/sparql-results+json,*/*;q=0.9',\r\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n    };\r\n\r\n    const queryData = {\r\n      query:\r\n        `PREFIX md: <http://trendmusic.com/musicdata#>\r\n  \r\n        SELECT ?song ?artist ?genre ?length ?year ?listeners\r\n        WHERE\r\n        {\r\n          ?m     md:song    ?song ;\r\n                md:artist    ?artist ;\r\n                md:genre    ?genre ;\r\n                md:length    ?length ;\r\n                md:year    ?year ;\r\n                md:listeners    ?listeners ;\r\n          \r\n        }\r\n        ORDER BY DESC(?listeners)`\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios(BASE_URL, {\r\n        method: 'POST',\r\n        headers,\r\n        data: qs.stringify(queryData)\r\n      });\r\n      console.log(data);\r\n\r\n      // Convert Data\r\n      const formatted_data = data.results.bindings.map((musics, index) => formatter(musics, index));\r\n      console.log(formatted_data)\r\n\r\n      setValue({\r\n        ...value,\r\n        musics: formatted_data\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  const formatter = (musics, index) => {\r\n    \r\n    return {\r\n      \"d\": index,\r\n      \"song\": musics.song.value,\r\n      \"artist\": musics.artist.value,\r\n      \"genre\": musics.genre.value,\r\n      \"length\": musics.length.value,\r\n      \"year\": musics.year.value,\r\n      \"listeners\": musics.listeners.value,\r\n    }\r\n  }\r\n\r\n  const handleChange = event => {\r\n    setValue({\r\n      ...value,\r\n      'input': event.target.value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"super_container\">\r\n        {/* Header */}\r\n        <header className=\"header\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <div className=\"header_content d-flex flex-row align-items-center justify-content-center\">\r\n                  {/* Logo */}\r\n                  <div className=\"logo\">\r\n                    <div className=\"d-flex flex-row align-items-end justify-content-start\">\r\n                      <span className=\"logo_bars d-flex flex-row align-items-end justify-content-between\"><span /><span /><span /><span /><span /></span>\r\n                      <span className=\"logo_text\">TrendMusic</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {/* Home */}\r\n        <div className=\"home\">\r\n          {/* Home Slider */}\r\n          <div className=\"home_slider_container\">\r\n            <div className=\"owl-carousel owl-theme home_slider\">\r\n              {/* Slide */}\r\n              <div className=\"slide\">\r\n                <div className=\"background_image\" style={{backgroundImage: 'url(images/index.jpg)'}} />\r\n                <div className=\"home_container\">\r\n                  <div className=\"container\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col\">\r\n                        <div className=\"home_content\">\r\n                          <div className=\"home_title_container text-center\">\r\n                            <div className=\"home_title islive text-center\">\r\n                              <h1>Trend <span>Music.</span></h1>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"music_form_container\">\r\n                            <form className=\"music_form\">\r\n                              <div className=\"d-flex flex-md-row flex-column align-items-start justify-content-md-between justify-content-start\">\r\n                                <div className=\"music_form_inputs d-flex flex-row align-items-start justify-content-between\">\r\n                                <input onChange={handleChange} type=\"text\" className=\"music_form_input\" placeholder=\"Search artist, music and genre\" required=\"required\"/>\r\n                                </div>\r\n                                <button className=\"music_form_button button\" onClick={getDataSong}><span>Search</span></button>\r\n                              </div>\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* musics */}\r\n        <div className=\"musics\">\r\n          <div className=\"container\">\r\n            <div className=\"row row-lg-eq-height\">\r\n              {/* Add */}\r\n              <div className=\"col-lg-4 order-lg-1 order-2 musics_col\">\r\n                <div className=\"extra d-flex flex-column align-items-center justify-content-between\">\r\n                  <div className=\"background_image\" style={{backgroundImage: 'url(images/extra_1.jpg)'}} />\r\n                  <div className=\"extra_frame\" />\r\n                  <div className=\"extra_text\">it's awesome</div>\r\n                  <div className=\"extra_title_container\">\r\n                    <div className=\"extra_year\">2020</div>\r\n                    <div className=\"extra_title\">TOP MUSIC</div>\r\n                    <div className=\"extra_subtitle\">june 2020</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* musics Content */}\r\n              <div className=\"col-lg-8 order-lg-2 order-1\">\r\n                <div className=\"musics_content\">\r\n                  <div className=\"section_title\">\r\n                    <h1>Trending</h1>\r\n                    <button className=\"music_form_button button\" onClick={getDataSorting}><span>See Top Music</span></button>\r\n                  </div>\r\n                  <div className=\"musics_list_container\">\r\n                    <ol>\r\n                      {value.musics.map((item, i) => \r\n                      <li key={i}>\r\n                        <div className=\"d-flex flex-row align-items-start justify-content-start\"></div>\r\n                        <div className=\"music_info\"></div>\r\n                        <div className=\"music_title\">{item.song}<br /></div>\r\n                        <div className=\"music_artist\">{item.artist}<br /></div>\r\n                        Genre : {item.genre}<br />\r\n                        Duration : {item.length}<br />\r\n                        Published : {item.year}<br />\r\n                        Listen : <NumberFormat value={item.listeners} displayType={'text'} thousandSeparator={true}/></li>)}\r\n                    </ol>\r\n                    <ul className=\"musics_list\">\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* App */}\r\n        {/* News */}\r\n        <div className=\"news\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <div className=\"section_title\">\r\n                  <h1>Latest News</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row news_row\">\r\n              {/* News Post */}\r\n              <div className=\"col-xl-4 col-md-6\">\r\n                <div className=\"news_post image_top\">\r\n                  <div className=\"news_post_image\"><img src=\"images/news_1.jpg\" alt=\"\" /></div>\r\n                  <div className=\"news_post_content\">\r\n                    <div className=\"news_post_title\"><span>musik/mu·sik/ n</span></div>\r\n                    <div className=\"news_post_text\">\r\n                      <p>ilmu atau seni menyusun nada atau suara dalam urutan, kombinasi, dan hubungan temporal untuk menghasilkan komposisi (suara) yang mempunyai kesatuan dan kesinam-bungan;</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* News Post */}\r\n              <div className=\"col-xl-4 col-md-6\">\r\n                <div className=\"news_post image_bottom d-flex flex-column align-items-start justify-content-start\">\r\n                  <div className=\"news_post_content order-md-1 order-2\">\r\n                    <div className=\"news_post_title\"><span>Apa itu TrendMusic?</span></div>\r\n                    <div className=\"news_post_text\">\r\n                      <p>TrendMusic merupakan sebuah aplikasi web semantik untuk mencari musik yang sedang trending, bisa mencari Judul, Artist dan Genre. TrendMusic ini dibuat untuk memenuhi tugas akhir mata kuliah Semantik Web.</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"news_post_image order-md-2 order-1\"><img src=\"images/news_2.jpg\" alt=\"\" /></div>\r\n                </div>\r\n              </div>\r\n              {/* News Post */}\r\n              <div className=\"col-xl-4 col-md-6\">\r\n                <div className=\"news_post image_top\">\r\n                  <div className=\"news_post_image\"><img src=\"images/news_3.jpg\" alt=\"\" /></div>\r\n                  <div className=\"news_post_content\">\r\n                    <div className=\"news_post_title\"><span>Web Semantik</span></div>\r\n                    <div className=\"news_post_text\">\r\n                      <p>Sir  Tim  Berners-Lee  mendefinisikan  Web  semantik  sebagai pengembangan  dari  web yang  ada  saat ini  dengan  informasi  yang  memiliki  makna  yang didefinisikan  dengan  baik  (well defined  meaning),  lebih  memampukan  komputer  dan manusia untuk bekerja sama (Berners-Lee, 2000).</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Footer */}\r\n        <footer className=\"footer\">\r\n          <div className=\"background_image\" style={{backgroundImage: 'url(images/footer.jpg)'}} />\r\n          <div className=\"footer_content\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                  {/* Logo */}\r\n                  <div className=\"logo\">\r\n                    <div className=\"d-flex flex-row align-items-end justify-content-start\">\r\n                      <span className=\"logo_bars d-flex flex-row align-items-end justify-content-between\"><span /><span /><span /><span /><span /></span>\r\n                      <span className=\"logo_text\">TrendMusic</span>\r\n                    </div>\r\n                  </div>\r\n                  {/* Footer Social */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer_bar\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <div className=\"copyright text-center\">\r\n                    {/* Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. */}\r\n                    Copyright © All rights reserved | This template is made by Colorlib\r\n                    {/* Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}